{-
   Kubernetes
   No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

   OpenAPI spec version: v1.14.0
   

   NOTE: This file is auto generated by the swagger code generator program.
   https://github.com/swagger-api/swagger-codegen.git
   Do not edit this file manually.
-}


module Data.IoK8sApiAuthorizationV1beta1SubjectRulesReviewStatus exposing (IoK8sApiAuthorizationV1beta1SubjectRulesReviewStatus, ioK8sApiAuthorizationV1beta1SubjectRulesReviewStatusDecoder, ioK8sApiAuthorizationV1beta1SubjectRulesReviewStatusEncoder)

import Data.IoK8sApiAuthorizationV1beta1NonResourceRule exposing (IoK8sApiAuthorizationV1beta1NonResourceRule, ioK8sApiAuthorizationV1beta1NonResourceRuleDecoder, ioK8sApiAuthorizationV1beta1NonResourceRuleEncoder)
import Data.IoK8sApiAuthorizationV1beta1ResourceRule exposing (IoK8sApiAuthorizationV1beta1ResourceRule, ioK8sApiAuthorizationV1beta1ResourceRuleDecoder, ioK8sApiAuthorizationV1beta1ResourceRuleEncoder)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (decode, optional, required)
import Json.Encode as Encode
import Maybe exposing (map, withDefault)


{-
   SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete.
-}


type alias IoK8sApiAuthorizationV1beta1SubjectRulesReviewStatus =
    { evaluationError : Maybe String
    , incomplete : Bool
    , nonResourceRules : (List IoK8sApiAuthorizationV1beta1NonResourceRule)
    , resourceRules : (List IoK8sApiAuthorizationV1beta1ResourceRule)
    }


ioK8sApiAuthorizationV1beta1SubjectRulesReviewStatusDecoder : Decoder IoK8sApiAuthorizationV1beta1SubjectRulesReviewStatus
ioK8sApiAuthorizationV1beta1SubjectRulesReviewStatusDecoder =
    decode IoK8sApiAuthorizationV1beta1SubjectRulesReviewStatus
        |> optional "evaluationError" (Decode.nullable Decode.string) Nothing
        |> required "incomplete" Decode.bool
        |> required "nonResourceRules" (Decode.list ioK8sApiAuthorizationV1beta1NonResourceRuleDecoder)
        |> required "resourceRules" (Decode.list ioK8sApiAuthorizationV1beta1ResourceRuleDecoder)



ioK8sApiAuthorizationV1beta1SubjectRulesReviewStatusEncoder : IoK8sApiAuthorizationV1beta1SubjectRulesReviewStatus -> Encode.Value
ioK8sApiAuthorizationV1beta1SubjectRulesReviewStatusEncoder model =
    Encode.object
        [ ( "evaluationError", withDefault Encode.null (map Encode.string model.evaluationError) )
        , ( "incomplete", Encode.bool model.incomplete )
        , ( "nonResourceRules", (Encode.list << List.map ioK8sApiAuthorizationV1beta1NonResourceRuleEncoder) model.nonResourceRules )
        , ( "resourceRules", (Encode.list << List.map ioK8sApiAuthorizationV1beta1ResourceRuleEncoder) model.resourceRules )
        ]


