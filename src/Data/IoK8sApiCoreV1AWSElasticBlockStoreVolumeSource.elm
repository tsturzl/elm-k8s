{-
   Kubernetes
   No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

   OpenAPI spec version: v1.14.0
   

   NOTE: This file is auto generated by the swagger code generator program.
   https://github.com/swagger-api/swagger-codegen.git
   Do not edit this file manually.
-}


module Data.IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource exposing (IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource, ioK8sApiCoreV1AWSElasticBlockStoreVolumeSourceDecoder, ioK8sApiCoreV1AWSElasticBlockStoreVolumeSourceEncoder)

import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (decode, optional, required)
import Json.Encode as Encode
import Maybe exposing (map, withDefault)


{-
   Represents a Persistent Disk resource in AWS.  An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
-}


type alias IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource =
    { fsType : Maybe String
    , partition : Maybe Int
    , readOnly : Maybe Bool
    , volumeID : String
    }


ioK8sApiCoreV1AWSElasticBlockStoreVolumeSourceDecoder : Decoder IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource
ioK8sApiCoreV1AWSElasticBlockStoreVolumeSourceDecoder =
    decode IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource
        |> optional "fsType" (Decode.nullable Decode.string) Nothing
        |> optional "partition" (Decode.nullable Decode.int) Nothing
        |> optional "readOnly" (Decode.nullable Decode.bool) Nothing
        |> required "volumeID" Decode.string



ioK8sApiCoreV1AWSElasticBlockStoreVolumeSourceEncoder : IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource -> Encode.Value
ioK8sApiCoreV1AWSElasticBlockStoreVolumeSourceEncoder model =
    Encode.object
        [ ( "fsType", withDefault Encode.null (map Encode.string model.fsType) )
        , ( "partition", withDefault Encode.null (map Encode.int model.partition) )
        , ( "readOnly", withDefault Encode.null (map Encode.bool model.readOnly) )
        , ( "volumeID", Encode.string model.volumeID )
        ]


