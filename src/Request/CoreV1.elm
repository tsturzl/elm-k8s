{-
   Kubernetes
   No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

   OpenAPI spec version: v1.14.0
   

   NOTE: This file is auto generated by the swagger code generator program.
   https://github.com/swagger-api/swagger-codegen.git
   Do not edit this file manually.
-}


module Request.CoreV1 exposing (connectCoreV1DeleteNamespacedPodProxy, connectCoreV1DeleteNamespacedPodProxyWithPath, connectCoreV1DeleteNamespacedServiceProxy, connectCoreV1DeleteNamespacedServiceProxyWithPath, connectCoreV1DeleteNodeProxy, connectCoreV1DeleteNodeProxyWithPath, connectCoreV1GetNamespacedPodAttach, connectCoreV1GetNamespacedPodExec, connectCoreV1GetNamespacedPodPortforward, connectCoreV1GetNamespacedPodProxy, connectCoreV1GetNamespacedPodProxyWithPath, connectCoreV1GetNamespacedServiceProxy, connectCoreV1GetNamespacedServiceProxyWithPath, connectCoreV1GetNodeProxy, connectCoreV1GetNodeProxyWithPath, connectCoreV1HeadNamespacedPodProxy, connectCoreV1HeadNamespacedPodProxyWithPath, connectCoreV1HeadNamespacedServiceProxy, connectCoreV1HeadNamespacedServiceProxyWithPath, connectCoreV1HeadNodeProxy, connectCoreV1HeadNodeProxyWithPath, connectCoreV1OptionsNamespacedPodProxy, connectCoreV1OptionsNamespacedPodProxyWithPath, connectCoreV1OptionsNamespacedServiceProxy, connectCoreV1OptionsNamespacedServiceProxyWithPath, connectCoreV1OptionsNodeProxy, connectCoreV1OptionsNodeProxyWithPath, connectCoreV1PatchNamespacedPodProxy, connectCoreV1PatchNamespacedPodProxyWithPath, connectCoreV1PatchNamespacedServiceProxy, connectCoreV1PatchNamespacedServiceProxyWithPath, connectCoreV1PatchNodeProxy, connectCoreV1PatchNodeProxyWithPath, connectCoreV1PostNamespacedPodAttach, connectCoreV1PostNamespacedPodExec, connectCoreV1PostNamespacedPodPortforward, connectCoreV1PostNamespacedPodProxy, connectCoreV1PostNamespacedPodProxyWithPath, connectCoreV1PostNamespacedServiceProxy, connectCoreV1PostNamespacedServiceProxyWithPath, connectCoreV1PostNodeProxy, connectCoreV1PostNodeProxyWithPath, connectCoreV1PutNamespacedPodProxy, connectCoreV1PutNamespacedPodProxyWithPath, connectCoreV1PutNamespacedServiceProxy, connectCoreV1PutNamespacedServiceProxyWithPath, connectCoreV1PutNodeProxy, connectCoreV1PutNodeProxyWithPath, createCoreV1Namespace, createCoreV1NamespacedBinding, createCoreV1NamespacedConfigMap, createCoreV1NamespacedEndpoints, createCoreV1NamespacedEvent, createCoreV1NamespacedLimitRange, createCoreV1NamespacedPersistentVolumeClaim, createCoreV1NamespacedPod, createCoreV1NamespacedPodBinding, createCoreV1NamespacedPodEviction, createCoreV1NamespacedPodTemplate, createCoreV1NamespacedReplicationController, createCoreV1NamespacedResourceQuota, createCoreV1NamespacedSecret, createCoreV1NamespacedService, createCoreV1NamespacedServiceAccount, createCoreV1Node, createCoreV1PersistentVolume, deleteCoreV1CollectionNamespacedConfigMap, deleteCoreV1CollectionNamespacedEndpoints, deleteCoreV1CollectionNamespacedEvent, deleteCoreV1CollectionNamespacedLimitRange, deleteCoreV1CollectionNamespacedPersistentVolumeClaim, deleteCoreV1CollectionNamespacedPod, deleteCoreV1CollectionNamespacedPodTemplate, deleteCoreV1CollectionNamespacedReplicationController, deleteCoreV1CollectionNamespacedResourceQuota, deleteCoreV1CollectionNamespacedSecret, deleteCoreV1CollectionNamespacedServiceAccount, deleteCoreV1CollectionNode, deleteCoreV1CollectionPersistentVolume, deleteCoreV1Namespace, deleteCoreV1NamespacedConfigMap, deleteCoreV1NamespacedEndpoints, deleteCoreV1NamespacedEvent, deleteCoreV1NamespacedLimitRange, deleteCoreV1NamespacedPersistentVolumeClaim, deleteCoreV1NamespacedPod, deleteCoreV1NamespacedPodTemplate, deleteCoreV1NamespacedReplicationController, deleteCoreV1NamespacedResourceQuota, deleteCoreV1NamespacedSecret, deleteCoreV1NamespacedService, deleteCoreV1NamespacedServiceAccount, deleteCoreV1Node, deleteCoreV1PersistentVolume, getCoreV1APIResources, listCoreV1ComponentStatus, listCoreV1ConfigMapForAllNamespaces, listCoreV1EndpointsForAllNamespaces, listCoreV1EventForAllNamespaces, listCoreV1LimitRangeForAllNamespaces, listCoreV1Namespace, listCoreV1NamespacedConfigMap, listCoreV1NamespacedEndpoints, listCoreV1NamespacedEvent, listCoreV1NamespacedLimitRange, listCoreV1NamespacedPersistentVolumeClaim, listCoreV1NamespacedPod, listCoreV1NamespacedPodTemplate, listCoreV1NamespacedReplicationController, listCoreV1NamespacedResourceQuota, listCoreV1NamespacedSecret, listCoreV1NamespacedService, listCoreV1NamespacedServiceAccount, listCoreV1Node, listCoreV1PersistentVolume, listCoreV1PersistentVolumeClaimForAllNamespaces, listCoreV1PodForAllNamespaces, listCoreV1PodTemplateForAllNamespaces, listCoreV1ReplicationControllerForAllNamespaces, listCoreV1ResourceQuotaForAllNamespaces, listCoreV1SecretForAllNamespaces, listCoreV1ServiceAccountForAllNamespaces, listCoreV1ServiceForAllNamespaces, patchCoreV1Namespace, patchCoreV1NamespaceStatus, patchCoreV1NamespacedConfigMap, patchCoreV1NamespacedEndpoints, patchCoreV1NamespacedEvent, patchCoreV1NamespacedLimitRange, patchCoreV1NamespacedPersistentVolumeClaim, patchCoreV1NamespacedPersistentVolumeClaimStatus, patchCoreV1NamespacedPod, patchCoreV1NamespacedPodStatus, patchCoreV1NamespacedPodTemplate, patchCoreV1NamespacedReplicationController, patchCoreV1NamespacedReplicationControllerScale, patchCoreV1NamespacedReplicationControllerStatus, patchCoreV1NamespacedResourceQuota, patchCoreV1NamespacedResourceQuotaStatus, patchCoreV1NamespacedSecret, patchCoreV1NamespacedService, patchCoreV1NamespacedServiceAccount, patchCoreV1NamespacedServiceStatus, patchCoreV1Node, patchCoreV1NodeStatus, patchCoreV1PersistentVolume, patchCoreV1PersistentVolumeStatus, readCoreV1ComponentStatus, readCoreV1Namespace, readCoreV1NamespaceStatus, readCoreV1NamespacedConfigMap, readCoreV1NamespacedEndpoints, readCoreV1NamespacedEvent, readCoreV1NamespacedLimitRange, readCoreV1NamespacedPersistentVolumeClaim, readCoreV1NamespacedPersistentVolumeClaimStatus, readCoreV1NamespacedPod, readCoreV1NamespacedPodLog, readCoreV1NamespacedPodStatus, readCoreV1NamespacedPodTemplate, readCoreV1NamespacedReplicationController, readCoreV1NamespacedReplicationControllerScale, readCoreV1NamespacedReplicationControllerStatus, readCoreV1NamespacedResourceQuota, readCoreV1NamespacedResourceQuotaStatus, readCoreV1NamespacedSecret, readCoreV1NamespacedService, readCoreV1NamespacedServiceAccount, readCoreV1NamespacedServiceStatus, readCoreV1Node, readCoreV1NodeStatus, readCoreV1PersistentVolume, readCoreV1PersistentVolumeStatus, replaceCoreV1Namespace, replaceCoreV1NamespaceFinalize, replaceCoreV1NamespaceStatus, replaceCoreV1NamespacedConfigMap, replaceCoreV1NamespacedEndpoints, replaceCoreV1NamespacedEvent, replaceCoreV1NamespacedLimitRange, replaceCoreV1NamespacedPersistentVolumeClaim, replaceCoreV1NamespacedPersistentVolumeClaimStatus, replaceCoreV1NamespacedPod, replaceCoreV1NamespacedPodStatus, replaceCoreV1NamespacedPodTemplate, replaceCoreV1NamespacedReplicationController, replaceCoreV1NamespacedReplicationControllerScale, replaceCoreV1NamespacedReplicationControllerStatus, replaceCoreV1NamespacedResourceQuota, replaceCoreV1NamespacedResourceQuotaStatus, replaceCoreV1NamespacedSecret, replaceCoreV1NamespacedService, replaceCoreV1NamespacedServiceAccount, replaceCoreV1NamespacedServiceStatus, replaceCoreV1Node, replaceCoreV1NodeStatus, replaceCoreV1PersistentVolume, replaceCoreV1PersistentVolumeStatus, watchCoreV1ConfigMapListForAllNamespaces, watchCoreV1EndpointsListForAllNamespaces, watchCoreV1EventListForAllNamespaces, watchCoreV1LimitRangeListForAllNamespaces, watchCoreV1Namespace, watchCoreV1NamespaceList, watchCoreV1NamespacedConfigMap, watchCoreV1NamespacedConfigMapList, watchCoreV1NamespacedEndpoints, watchCoreV1NamespacedEndpointsList, watchCoreV1NamespacedEvent, watchCoreV1NamespacedEventList, watchCoreV1NamespacedLimitRange, watchCoreV1NamespacedLimitRangeList, watchCoreV1NamespacedPersistentVolumeClaim, watchCoreV1NamespacedPersistentVolumeClaimList, watchCoreV1NamespacedPod, watchCoreV1NamespacedPodList, watchCoreV1NamespacedPodTemplate, watchCoreV1NamespacedPodTemplateList, watchCoreV1NamespacedReplicationController, watchCoreV1NamespacedReplicationControllerList, watchCoreV1NamespacedResourceQuota, watchCoreV1NamespacedResourceQuotaList, watchCoreV1NamespacedSecret, watchCoreV1NamespacedSecretList, watchCoreV1NamespacedService, watchCoreV1NamespacedServiceAccount, watchCoreV1NamespacedServiceAccountList, watchCoreV1NamespacedServiceList, watchCoreV1Node, watchCoreV1NodeList, watchCoreV1PersistentVolume, watchCoreV1PersistentVolumeClaimListForAllNamespaces, watchCoreV1PersistentVolumeList, watchCoreV1PodListForAllNamespaces, watchCoreV1PodTemplateListForAllNamespaces, watchCoreV1ReplicationControllerListForAllNamespaces, watchCoreV1ResourceQuotaListForAllNamespaces, watchCoreV1SecretListForAllNamespaces, watchCoreV1ServiceAccountListForAllNamespaces, watchCoreV1ServiceListForAllNamespaces)

import Data.IoK8sApimachineryPkgApisMetaV1DeleteOptions exposing (IoK8sApimachineryPkgApisMetaV1DeleteOptions, ioK8sApimachineryPkgApisMetaV1DeleteOptionsEncoder)
import Data.IoK8sApiCoreV1Endpoints exposing (IoK8sApiCoreV1Endpoints, ioK8sApiCoreV1EndpointsDecoder, ioK8sApiCoreV1EndpointsEncoder)
import Data.IoK8sApiCoreV1PersistentVolumeClaim exposing (IoK8sApiCoreV1PersistentVolumeClaim, ioK8sApiCoreV1PersistentVolumeClaimDecoder, ioK8sApiCoreV1PersistentVolumeClaimEncoder)
import Data.IoK8sApimachineryPkgApisMetaV1APIResourceList exposing (IoK8sApimachineryPkgApisMetaV1APIResourceList, ioK8sApimachineryPkgApisMetaV1APIResourceListDecoder)
import Data.IoK8sApiCoreV1Secret exposing (IoK8sApiCoreV1Secret, ioK8sApiCoreV1SecretDecoder, ioK8sApiCoreV1SecretEncoder)
import Data.IoK8sApiCoreV1ReplicationControllerList exposing (IoK8sApiCoreV1ReplicationControllerList, ioK8sApiCoreV1ReplicationControllerListDecoder)
import Data.IoK8sApiCoreV1ResourceQuota exposing (IoK8sApiCoreV1ResourceQuota, ioK8sApiCoreV1ResourceQuotaDecoder, ioK8sApiCoreV1ResourceQuotaEncoder)
import Data.IoK8sApiCoreV1EndpointsList exposing (IoK8sApiCoreV1EndpointsList, ioK8sApiCoreV1EndpointsListDecoder)
import Data.String exposing (Decode.string, String)
import Data.IoK8sApiCoreV1Pod exposing (IoK8sApiCoreV1Pod, ioK8sApiCoreV1PodDecoder, ioK8sApiCoreV1PodEncoder)
import Data.IoK8sApiCoreV1PodTemplate exposing (IoK8sApiCoreV1PodTemplate, ioK8sApiCoreV1PodTemplateDecoder, ioK8sApiCoreV1PodTemplateEncoder)
import Data.IoK8sApiCoreV1ResourceQuotaList exposing (IoK8sApiCoreV1ResourceQuotaList, ioK8sApiCoreV1ResourceQuotaListDecoder)
import Data.IoK8sApiCoreV1ComponentStatus exposing (IoK8sApiCoreV1ComponentStatus, ioK8sApiCoreV1ComponentStatusDecoder)
import Data.IoK8sApiCoreV1PodTemplateList exposing (IoK8sApiCoreV1PodTemplateList, ioK8sApiCoreV1PodTemplateListDecoder)
import Data.IoK8sApiCoreV1ReplicationController exposing (IoK8sApiCoreV1ReplicationController, ioK8sApiCoreV1ReplicationControllerDecoder, ioK8sApiCoreV1ReplicationControllerEncoder)
import Data.IoK8sApiCoreV1LimitRangeList exposing (IoK8sApiCoreV1LimitRangeList, ioK8sApiCoreV1LimitRangeListDecoder)
import Data.IoK8sApimachineryPkgApisMetaV1WatchEvent exposing (IoK8sApimachineryPkgApisMetaV1WatchEvent, ioK8sApimachineryPkgApisMetaV1WatchEventDecoder)
import Data.IoK8sApiCoreV1PersistentVolumeList exposing (IoK8sApiCoreV1PersistentVolumeList, ioK8sApiCoreV1PersistentVolumeListDecoder)
import Data.IoK8sApiCoreV1PersistentVolumeClaimList exposing (IoK8sApiCoreV1PersistentVolumeClaimList, ioK8sApiCoreV1PersistentVolumeClaimListDecoder)
import Data.IoK8sApiCoreV1LimitRange exposing (IoK8sApiCoreV1LimitRange, ioK8sApiCoreV1LimitRangeDecoder, ioK8sApiCoreV1LimitRangeEncoder)
import Data.IoK8sApiCoreV1Service exposing (IoK8sApiCoreV1Service, ioK8sApiCoreV1ServiceDecoder, ioK8sApiCoreV1ServiceEncoder)
import Data.IoK8sApimachineryPkgApisMetaV1Status exposing (IoK8sApimachineryPkgApisMetaV1Status, ioK8sApimachineryPkgApisMetaV1StatusDecoder)
import Data.IoK8sApiCoreV1EventList exposing (IoK8sApiCoreV1EventList, ioK8sApiCoreV1EventListDecoder)
import Data.IoK8sApiCoreV1Namespace exposing (IoK8sApiCoreV1Namespace, ioK8sApiCoreV1NamespaceDecoder, ioK8sApiCoreV1NamespaceEncoder)
import Data.IoK8sApiCoreV1PodList exposing (IoK8sApiCoreV1PodList, ioK8sApiCoreV1PodListDecoder)
import Data.IoK8sApiCoreV1Event exposing (IoK8sApiCoreV1Event, ioK8sApiCoreV1EventDecoder, ioK8sApiCoreV1EventEncoder)
import Data.IoK8sApiCoreV1PersistentVolume exposing (IoK8sApiCoreV1PersistentVolume, ioK8sApiCoreV1PersistentVolumeDecoder, ioK8sApiCoreV1PersistentVolumeEncoder)
import Data.IoK8sApiCoreV1NamespaceList exposing (IoK8sApiCoreV1NamespaceList, ioK8sApiCoreV1NamespaceListDecoder)
import Data.IoK8sApiCoreV1SecretList exposing (IoK8sApiCoreV1SecretList, ioK8sApiCoreV1SecretListDecoder)
import Data.IoK8sApiCoreV1ConfigMapList exposing (IoK8sApiCoreV1ConfigMapList, ioK8sApiCoreV1ConfigMapListDecoder)
import Data.IoK8sApiCoreV1NodeList exposing (IoK8sApiCoreV1NodeList, ioK8sApiCoreV1NodeListDecoder)
import Data.IoK8sApiPolicyV1beta1Eviction exposing (IoK8sApiPolicyV1beta1Eviction, ioK8sApiPolicyV1beta1EvictionDecoder, ioK8sApiPolicyV1beta1EvictionEncoder)
import Data.IoK8sApiCoreV1ServiceList exposing (IoK8sApiCoreV1ServiceList, ioK8sApiCoreV1ServiceListDecoder)
import Data.IoK8sApiCoreV1ComponentStatusList exposing (IoK8sApiCoreV1ComponentStatusList, ioK8sApiCoreV1ComponentStatusListDecoder)
import Data.IoK8sApiCoreV1Node exposing (IoK8sApiCoreV1Node, ioK8sApiCoreV1NodeDecoder, ioK8sApiCoreV1NodeEncoder)
import Data.IoK8sApiAutoscalingV1Scale exposing (IoK8sApiAutoscalingV1Scale, ioK8sApiAutoscalingV1ScaleDecoder, ioK8sApiAutoscalingV1ScaleEncoder)
import Data.IoK8sApimachineryPkgApisMetaV1Patch exposing (IoK8sApimachineryPkgApisMetaV1Patch, ioK8sApimachineryPkgApisMetaV1PatchEncoder)
import Data.IoK8sApiCoreV1ServiceAccountList exposing (IoK8sApiCoreV1ServiceAccountList, ioK8sApiCoreV1ServiceAccountListDecoder)
import Data.IoK8sApiCoreV1Binding exposing (IoK8sApiCoreV1Binding, ioK8sApiCoreV1BindingDecoder, ioK8sApiCoreV1BindingEncoder)
import Data.IoK8sApiCoreV1ServiceAccount exposing (IoK8sApiCoreV1ServiceAccount, ioK8sApiCoreV1ServiceAccountDecoder, ioK8sApiCoreV1ServiceAccountEncoder)
import Data.IoK8sApiCoreV1ConfigMap exposing (IoK8sApiCoreV1ConfigMap, ioK8sApiCoreV1ConfigMapDecoder, ioK8sApiCoreV1ConfigMapEncoder)
import Http
import Json.Decode as Decode


basePath : String
basePath =
    "https://localhost"


{-
   connect DELETE requests to proxy of Pod
-}
connectCoreV1DeleteNamespacedPodProxy : String -> String -> Http.Request String
connectCoreV1DeleteNamespacedPodProxy name namespace =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/proxy"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect DELETE requests to proxy of Pod
-}
connectCoreV1DeleteNamespacedPodProxyWithPath : String -> String -> String -> Http.Request String
connectCoreV1DeleteNamespacedPodProxyWithPath name namespace path =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/proxy/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect DELETE requests to proxy of Service
-}
connectCoreV1DeleteNamespacedServiceProxy : String -> String -> Http.Request String
connectCoreV1DeleteNamespacedServiceProxy name namespace =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services/" ++ name ++ "/proxy"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect DELETE requests to proxy of Service
-}
connectCoreV1DeleteNamespacedServiceProxyWithPath : String -> String -> String -> Http.Request String
connectCoreV1DeleteNamespacedServiceProxyWithPath name namespace path =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services/" ++ name ++ "/proxy/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect DELETE requests to proxy of Node
-}
connectCoreV1DeleteNodeProxy : String -> Http.Request String
connectCoreV1DeleteNodeProxy name =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/nodes/" ++ name ++ "/proxy"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect DELETE requests to proxy of Node
-}
connectCoreV1DeleteNodeProxyWithPath : String -> String -> Http.Request String
connectCoreV1DeleteNodeProxyWithPath name path =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/nodes/" ++ name ++ "/proxy/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect GET requests to attach of Pod
-}
connectCoreV1GetNamespacedPodAttach : String -> String -> Http.Request String
connectCoreV1GetNamespacedPodAttach name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/attach"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect GET requests to exec of Pod
-}
connectCoreV1GetNamespacedPodExec : String -> String -> Http.Request String
connectCoreV1GetNamespacedPodExec name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/exec"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect GET requests to portforward of Pod
-}
connectCoreV1GetNamespacedPodPortforward : String -> String -> Http.Request String
connectCoreV1GetNamespacedPodPortforward name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/portforward"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect GET requests to proxy of Pod
-}
connectCoreV1GetNamespacedPodProxy : String -> String -> Http.Request String
connectCoreV1GetNamespacedPodProxy name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/proxy"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect GET requests to proxy of Pod
-}
connectCoreV1GetNamespacedPodProxyWithPath : String -> String -> String -> Http.Request String
connectCoreV1GetNamespacedPodProxyWithPath name namespace path =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/proxy/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect GET requests to proxy of Service
-}
connectCoreV1GetNamespacedServiceProxy : String -> String -> Http.Request String
connectCoreV1GetNamespacedServiceProxy name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services/" ++ name ++ "/proxy"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect GET requests to proxy of Service
-}
connectCoreV1GetNamespacedServiceProxyWithPath : String -> String -> String -> Http.Request String
connectCoreV1GetNamespacedServiceProxyWithPath name namespace path =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services/" ++ name ++ "/proxy/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect GET requests to proxy of Node
-}
connectCoreV1GetNodeProxy : String -> Http.Request String
connectCoreV1GetNodeProxy name =
    { method = "GET"
    , url = basePath ++ "/api/v1/nodes/" ++ name ++ "/proxy"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect GET requests to proxy of Node
-}
connectCoreV1GetNodeProxyWithPath : String -> String -> Http.Request String
connectCoreV1GetNodeProxyWithPath name path =
    { method = "GET"
    , url = basePath ++ "/api/v1/nodes/" ++ name ++ "/proxy/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect HEAD requests to proxy of Pod
-}
connectCoreV1HeadNamespacedPodProxy : String -> String -> Http.Request String
connectCoreV1HeadNamespacedPodProxy name namespace =
    { method = "HEAD"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/proxy"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect HEAD requests to proxy of Pod
-}
connectCoreV1HeadNamespacedPodProxyWithPath : String -> String -> String -> Http.Request String
connectCoreV1HeadNamespacedPodProxyWithPath name namespace path =
    { method = "HEAD"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/proxy/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect HEAD requests to proxy of Service
-}
connectCoreV1HeadNamespacedServiceProxy : String -> String -> Http.Request String
connectCoreV1HeadNamespacedServiceProxy name namespace =
    { method = "HEAD"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services/" ++ name ++ "/proxy"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect HEAD requests to proxy of Service
-}
connectCoreV1HeadNamespacedServiceProxyWithPath : String -> String -> String -> Http.Request String
connectCoreV1HeadNamespacedServiceProxyWithPath name namespace path =
    { method = "HEAD"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services/" ++ name ++ "/proxy/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect HEAD requests to proxy of Node
-}
connectCoreV1HeadNodeProxy : String -> Http.Request String
connectCoreV1HeadNodeProxy name =
    { method = "HEAD"
    , url = basePath ++ "/api/v1/nodes/" ++ name ++ "/proxy"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect HEAD requests to proxy of Node
-}
connectCoreV1HeadNodeProxyWithPath : String -> String -> Http.Request String
connectCoreV1HeadNodeProxyWithPath name path =
    { method = "HEAD"
    , url = basePath ++ "/api/v1/nodes/" ++ name ++ "/proxy/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect OPTIONS requests to proxy of Pod
-}
connectCoreV1OptionsNamespacedPodProxy : String -> String -> Http.Request String
connectCoreV1OptionsNamespacedPodProxy name namespace =
    { method = "OPTIONS"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/proxy"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect OPTIONS requests to proxy of Pod
-}
connectCoreV1OptionsNamespacedPodProxyWithPath : String -> String -> String -> Http.Request String
connectCoreV1OptionsNamespacedPodProxyWithPath name namespace path =
    { method = "OPTIONS"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/proxy/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect OPTIONS requests to proxy of Service
-}
connectCoreV1OptionsNamespacedServiceProxy : String -> String -> Http.Request String
connectCoreV1OptionsNamespacedServiceProxy name namespace =
    { method = "OPTIONS"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services/" ++ name ++ "/proxy"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect OPTIONS requests to proxy of Service
-}
connectCoreV1OptionsNamespacedServiceProxyWithPath : String -> String -> String -> Http.Request String
connectCoreV1OptionsNamespacedServiceProxyWithPath name namespace path =
    { method = "OPTIONS"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services/" ++ name ++ "/proxy/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect OPTIONS requests to proxy of Node
-}
connectCoreV1OptionsNodeProxy : String -> Http.Request String
connectCoreV1OptionsNodeProxy name =
    { method = "OPTIONS"
    , url = basePath ++ "/api/v1/nodes/" ++ name ++ "/proxy"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect OPTIONS requests to proxy of Node
-}
connectCoreV1OptionsNodeProxyWithPath : String -> String -> Http.Request String
connectCoreV1OptionsNodeProxyWithPath name path =
    { method = "OPTIONS"
    , url = basePath ++ "/api/v1/nodes/" ++ name ++ "/proxy/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect PATCH requests to proxy of Pod
-}
connectCoreV1PatchNamespacedPodProxy : String -> String -> Http.Request String
connectCoreV1PatchNamespacedPodProxy name namespace =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/proxy"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect PATCH requests to proxy of Pod
-}
connectCoreV1PatchNamespacedPodProxyWithPath : String -> String -> String -> Http.Request String
connectCoreV1PatchNamespacedPodProxyWithPath name namespace path =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/proxy/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect PATCH requests to proxy of Service
-}
connectCoreV1PatchNamespacedServiceProxy : String -> String -> Http.Request String
connectCoreV1PatchNamespacedServiceProxy name namespace =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services/" ++ name ++ "/proxy"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect PATCH requests to proxy of Service
-}
connectCoreV1PatchNamespacedServiceProxyWithPath : String -> String -> String -> Http.Request String
connectCoreV1PatchNamespacedServiceProxyWithPath name namespace path =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services/" ++ name ++ "/proxy/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect PATCH requests to proxy of Node
-}
connectCoreV1PatchNodeProxy : String -> Http.Request String
connectCoreV1PatchNodeProxy name =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/nodes/" ++ name ++ "/proxy"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect PATCH requests to proxy of Node
-}
connectCoreV1PatchNodeProxyWithPath : String -> String -> Http.Request String
connectCoreV1PatchNodeProxyWithPath name path =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/nodes/" ++ name ++ "/proxy/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect POST requests to attach of Pod
-}
connectCoreV1PostNamespacedPodAttach : String -> String -> Http.Request String
connectCoreV1PostNamespacedPodAttach name namespace =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/attach"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect POST requests to exec of Pod
-}
connectCoreV1PostNamespacedPodExec : String -> String -> Http.Request String
connectCoreV1PostNamespacedPodExec name namespace =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/exec"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect POST requests to portforward of Pod
-}
connectCoreV1PostNamespacedPodPortforward : String -> String -> Http.Request String
connectCoreV1PostNamespacedPodPortforward name namespace =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/portforward"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect POST requests to proxy of Pod
-}
connectCoreV1PostNamespacedPodProxy : String -> String -> Http.Request String
connectCoreV1PostNamespacedPodProxy name namespace =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/proxy"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect POST requests to proxy of Pod
-}
connectCoreV1PostNamespacedPodProxyWithPath : String -> String -> String -> Http.Request String
connectCoreV1PostNamespacedPodProxyWithPath name namespace path =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/proxy/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect POST requests to proxy of Service
-}
connectCoreV1PostNamespacedServiceProxy : String -> String -> Http.Request String
connectCoreV1PostNamespacedServiceProxy name namespace =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services/" ++ name ++ "/proxy"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect POST requests to proxy of Service
-}
connectCoreV1PostNamespacedServiceProxyWithPath : String -> String -> String -> Http.Request String
connectCoreV1PostNamespacedServiceProxyWithPath name namespace path =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services/" ++ name ++ "/proxy/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect POST requests to proxy of Node
-}
connectCoreV1PostNodeProxy : String -> Http.Request String
connectCoreV1PostNodeProxy name =
    { method = "POST"
    , url = basePath ++ "/api/v1/nodes/" ++ name ++ "/proxy"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect POST requests to proxy of Node
-}
connectCoreV1PostNodeProxyWithPath : String -> String -> Http.Request String
connectCoreV1PostNodeProxyWithPath name path =
    { method = "POST"
    , url = basePath ++ "/api/v1/nodes/" ++ name ++ "/proxy/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect PUT requests to proxy of Pod
-}
connectCoreV1PutNamespacedPodProxy : String -> String -> Http.Request String
connectCoreV1PutNamespacedPodProxy name namespace =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/proxy"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect PUT requests to proxy of Pod
-}
connectCoreV1PutNamespacedPodProxyWithPath : String -> String -> String -> Http.Request String
connectCoreV1PutNamespacedPodProxyWithPath name namespace path =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/proxy/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect PUT requests to proxy of Service
-}
connectCoreV1PutNamespacedServiceProxy : String -> String -> Http.Request String
connectCoreV1PutNamespacedServiceProxy name namespace =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services/" ++ name ++ "/proxy"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect PUT requests to proxy of Service
-}
connectCoreV1PutNamespacedServiceProxyWithPath : String -> String -> String -> Http.Request String
connectCoreV1PutNamespacedServiceProxyWithPath name namespace path =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services/" ++ name ++ "/proxy/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect PUT requests to proxy of Node
-}
connectCoreV1PutNodeProxy : String -> Http.Request String
connectCoreV1PutNodeProxy name =
    { method = "PUT"
    , url = basePath ++ "/api/v1/nodes/" ++ name ++ "/proxy"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   connect PUT requests to proxy of Node
-}
connectCoreV1PutNodeProxyWithPath : String -> String -> Http.Request String
connectCoreV1PutNodeProxyWithPath name path =
    { method = "PUT"
    , url = basePath ++ "/api/v1/nodes/" ++ name ++ "/proxy/" ++ path
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   create a Namespace
-}
createCoreV1Namespace : IoK8sApiCoreV1Namespace -> Http.Request IoK8sApiCoreV1Namespace
createCoreV1Namespace model =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1NamespaceEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1NamespaceDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   create a Binding
-}
createCoreV1NamespacedBinding : String -> IoK8sApiCoreV1Binding -> Http.Request IoK8sApiCoreV1Binding
createCoreV1NamespacedBinding namespace model =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/bindings"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1BindingEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1BindingDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   create a ConfigMap
-}
createCoreV1NamespacedConfigMap : String -> IoK8sApiCoreV1ConfigMap -> Http.Request IoK8sApiCoreV1ConfigMap
createCoreV1NamespacedConfigMap namespace model =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/configmaps"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1ConfigMapEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1ConfigMapDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   create Endpoints
-}
createCoreV1NamespacedEndpoints : String -> IoK8sApiCoreV1Endpoints -> Http.Request IoK8sApiCoreV1Endpoints
createCoreV1NamespacedEndpoints namespace model =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/endpoints"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1EndpointsEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1EndpointsDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   create an Event
-}
createCoreV1NamespacedEvent : String -> IoK8sApiCoreV1Event -> Http.Request IoK8sApiCoreV1Event
createCoreV1NamespacedEvent namespace model =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/events"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1EventEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1EventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   create a LimitRange
-}
createCoreV1NamespacedLimitRange : String -> IoK8sApiCoreV1LimitRange -> Http.Request IoK8sApiCoreV1LimitRange
createCoreV1NamespacedLimitRange namespace model =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/limitranges"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1LimitRangeEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1LimitRangeDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   create a PersistentVolumeClaim
-}
createCoreV1NamespacedPersistentVolumeClaim : String -> IoK8sApiCoreV1PersistentVolumeClaim -> Http.Request IoK8sApiCoreV1PersistentVolumeClaim
createCoreV1NamespacedPersistentVolumeClaim namespace model =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/persistentvolumeclaims"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1PersistentVolumeClaimEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1PersistentVolumeClaimDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   create a Pod
-}
createCoreV1NamespacedPod : String -> IoK8sApiCoreV1Pod -> Http.Request IoK8sApiCoreV1Pod
createCoreV1NamespacedPod namespace model =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1PodEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1PodDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   create binding of a Pod
-}
createCoreV1NamespacedPodBinding : String -> String -> IoK8sApiCoreV1Binding -> Http.Request IoK8sApiCoreV1Binding
createCoreV1NamespacedPodBinding name namespace model =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/binding"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1BindingEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1BindingDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   create eviction of a Pod
-}
createCoreV1NamespacedPodEviction : String -> String -> IoK8sApiPolicyV1beta1Eviction -> Http.Request IoK8sApiPolicyV1beta1Eviction
createCoreV1NamespacedPodEviction name namespace model =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/eviction"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiPolicyV1beta1EvictionEncoder model
    , expect = Http.expectJson ioK8sApiPolicyV1beta1EvictionDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   create a PodTemplate
-}
createCoreV1NamespacedPodTemplate : String -> IoK8sApiCoreV1PodTemplate -> Http.Request IoK8sApiCoreV1PodTemplate
createCoreV1NamespacedPodTemplate namespace model =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/podtemplates"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1PodTemplateEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1PodTemplateDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   create a ReplicationController
-}
createCoreV1NamespacedReplicationController : String -> IoK8sApiCoreV1ReplicationController -> Http.Request IoK8sApiCoreV1ReplicationController
createCoreV1NamespacedReplicationController namespace model =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/replicationcontrollers"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1ReplicationControllerEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1ReplicationControllerDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   create a ResourceQuota
-}
createCoreV1NamespacedResourceQuota : String -> IoK8sApiCoreV1ResourceQuota -> Http.Request IoK8sApiCoreV1ResourceQuota
createCoreV1NamespacedResourceQuota namespace model =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/resourcequotas"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1ResourceQuotaEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1ResourceQuotaDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   create a Secret
-}
createCoreV1NamespacedSecret : String -> IoK8sApiCoreV1Secret -> Http.Request IoK8sApiCoreV1Secret
createCoreV1NamespacedSecret namespace model =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/secrets"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1SecretEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1SecretDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   create a Service
-}
createCoreV1NamespacedService : String -> IoK8sApiCoreV1Service -> Http.Request IoK8sApiCoreV1Service
createCoreV1NamespacedService namespace model =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1ServiceEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1ServiceDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   create a ServiceAccount
-}
createCoreV1NamespacedServiceAccount : String -> IoK8sApiCoreV1ServiceAccount -> Http.Request IoK8sApiCoreV1ServiceAccount
createCoreV1NamespacedServiceAccount namespace model =
    { method = "POST"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/serviceaccounts"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1ServiceAccountEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1ServiceAccountDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   create a Node
-}
createCoreV1Node : IoK8sApiCoreV1Node -> Http.Request IoK8sApiCoreV1Node
createCoreV1Node model =
    { method = "POST"
    , url = basePath ++ "/api/v1/nodes"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1NodeEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1NodeDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   create a PersistentVolume
-}
createCoreV1PersistentVolume : IoK8sApiCoreV1PersistentVolume -> Http.Request IoK8sApiCoreV1PersistentVolume
createCoreV1PersistentVolume model =
    { method = "POST"
    , url = basePath ++ "/api/v1/persistentvolumes"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1PersistentVolumeEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1PersistentVolumeDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete collection of ConfigMap
-}
deleteCoreV1CollectionNamespacedConfigMap : String -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1CollectionNamespacedConfigMap namespace =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/configmaps"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete collection of Endpoints
-}
deleteCoreV1CollectionNamespacedEndpoints : String -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1CollectionNamespacedEndpoints namespace =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/endpoints"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete collection of Event
-}
deleteCoreV1CollectionNamespacedEvent : String -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1CollectionNamespacedEvent namespace =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/events"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete collection of LimitRange
-}
deleteCoreV1CollectionNamespacedLimitRange : String -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1CollectionNamespacedLimitRange namespace =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/limitranges"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete collection of PersistentVolumeClaim
-}
deleteCoreV1CollectionNamespacedPersistentVolumeClaim : String -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1CollectionNamespacedPersistentVolumeClaim namespace =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/persistentvolumeclaims"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete collection of Pod
-}
deleteCoreV1CollectionNamespacedPod : String -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1CollectionNamespacedPod namespace =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete collection of PodTemplate
-}
deleteCoreV1CollectionNamespacedPodTemplate : String -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1CollectionNamespacedPodTemplate namespace =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/podtemplates"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete collection of ReplicationController
-}
deleteCoreV1CollectionNamespacedReplicationController : String -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1CollectionNamespacedReplicationController namespace =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/replicationcontrollers"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete collection of ResourceQuota
-}
deleteCoreV1CollectionNamespacedResourceQuota : String -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1CollectionNamespacedResourceQuota namespace =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/resourcequotas"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete collection of Secret
-}
deleteCoreV1CollectionNamespacedSecret : String -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1CollectionNamespacedSecret namespace =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/secrets"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete collection of ServiceAccount
-}
deleteCoreV1CollectionNamespacedServiceAccount : String -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1CollectionNamespacedServiceAccount namespace =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/serviceaccounts"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete collection of Node
-}
deleteCoreV1CollectionNode : Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1CollectionNode =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/nodes"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete collection of PersistentVolume
-}
deleteCoreV1CollectionPersistentVolume : Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1CollectionPersistentVolume =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/persistentvolumes"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete a Namespace
-}
deleteCoreV1Namespace : String -> IoK8sApimachineryPkgApisMetaV1DeleteOptions -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1Namespace name model =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1DeleteOptionsEncoder model
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete a ConfigMap
-}
deleteCoreV1NamespacedConfigMap : String -> String -> IoK8sApimachineryPkgApisMetaV1DeleteOptions -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1NamespacedConfigMap name namespace model =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/configmaps/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1DeleteOptionsEncoder model
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete Endpoints
-}
deleteCoreV1NamespacedEndpoints : String -> String -> IoK8sApimachineryPkgApisMetaV1DeleteOptions -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1NamespacedEndpoints name namespace model =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/endpoints/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1DeleteOptionsEncoder model
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete an Event
-}
deleteCoreV1NamespacedEvent : String -> String -> IoK8sApimachineryPkgApisMetaV1DeleteOptions -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1NamespacedEvent name namespace model =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/events/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1DeleteOptionsEncoder model
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete a LimitRange
-}
deleteCoreV1NamespacedLimitRange : String -> String -> IoK8sApimachineryPkgApisMetaV1DeleteOptions -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1NamespacedLimitRange name namespace model =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/limitranges/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1DeleteOptionsEncoder model
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete a PersistentVolumeClaim
-}
deleteCoreV1NamespacedPersistentVolumeClaim : String -> String -> IoK8sApimachineryPkgApisMetaV1DeleteOptions -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1NamespacedPersistentVolumeClaim name namespace model =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/persistentvolumeclaims/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1DeleteOptionsEncoder model
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete a Pod
-}
deleteCoreV1NamespacedPod : String -> String -> IoK8sApimachineryPkgApisMetaV1DeleteOptions -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1NamespacedPod name namespace model =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1DeleteOptionsEncoder model
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete a PodTemplate
-}
deleteCoreV1NamespacedPodTemplate : String -> String -> IoK8sApimachineryPkgApisMetaV1DeleteOptions -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1NamespacedPodTemplate name namespace model =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/podtemplates/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1DeleteOptionsEncoder model
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete a ReplicationController
-}
deleteCoreV1NamespacedReplicationController : String -> String -> IoK8sApimachineryPkgApisMetaV1DeleteOptions -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1NamespacedReplicationController name namespace model =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/replicationcontrollers/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1DeleteOptionsEncoder model
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete a ResourceQuota
-}
deleteCoreV1NamespacedResourceQuota : String -> String -> IoK8sApimachineryPkgApisMetaV1DeleteOptions -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1NamespacedResourceQuota name namespace model =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/resourcequotas/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1DeleteOptionsEncoder model
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete a Secret
-}
deleteCoreV1NamespacedSecret : String -> String -> IoK8sApimachineryPkgApisMetaV1DeleteOptions -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1NamespacedSecret name namespace model =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/secrets/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1DeleteOptionsEncoder model
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete a Service
-}
deleteCoreV1NamespacedService : String -> String -> IoK8sApimachineryPkgApisMetaV1DeleteOptions -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1NamespacedService name namespace model =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1DeleteOptionsEncoder model
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete a ServiceAccount
-}
deleteCoreV1NamespacedServiceAccount : String -> String -> IoK8sApimachineryPkgApisMetaV1DeleteOptions -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1NamespacedServiceAccount name namespace model =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/serviceaccounts/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1DeleteOptionsEncoder model
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete a Node
-}
deleteCoreV1Node : String -> IoK8sApimachineryPkgApisMetaV1DeleteOptions -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1Node name model =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/nodes/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1DeleteOptionsEncoder model
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   delete a PersistentVolume
-}
deleteCoreV1PersistentVolume : String -> IoK8sApimachineryPkgApisMetaV1DeleteOptions -> Http.Request IoK8sApimachineryPkgApisMetaV1Status
deleteCoreV1PersistentVolume name model =
    { method = "DELETE"
    , url = basePath ++ "/api/v1/persistentvolumes/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1DeleteOptionsEncoder model
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1StatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   get available resources
-}
getCoreV1APIResources : Http.Request IoK8sApimachineryPkgApisMetaV1APIResourceList
getCoreV1APIResources =
    { method = "GET"
    , url = basePath ++ "/api/v1/"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1APIResourceListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list objects of kind ComponentStatus
-}
listCoreV1ComponentStatus : Http.Request IoK8sApiCoreV1ComponentStatusList
listCoreV1ComponentStatus =
    { method = "GET"
    , url = basePath ++ "/api/v1/componentstatuses"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1ComponentStatusListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind ConfigMap
-}
listCoreV1ConfigMapForAllNamespaces : Http.Request IoK8sApiCoreV1ConfigMapList
listCoreV1ConfigMapForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/configmaps"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1ConfigMapListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind Endpoints
-}
listCoreV1EndpointsForAllNamespaces : Http.Request IoK8sApiCoreV1EndpointsList
listCoreV1EndpointsForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/endpoints"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1EndpointsListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind Event
-}
listCoreV1EventForAllNamespaces : Http.Request IoK8sApiCoreV1EventList
listCoreV1EventForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/events"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1EventListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind LimitRange
-}
listCoreV1LimitRangeForAllNamespaces : Http.Request IoK8sApiCoreV1LimitRangeList
listCoreV1LimitRangeForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/limitranges"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1LimitRangeListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind Namespace
-}
listCoreV1Namespace : Http.Request IoK8sApiCoreV1NamespaceList
listCoreV1Namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1NamespaceListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind ConfigMap
-}
listCoreV1NamespacedConfigMap : String -> Http.Request IoK8sApiCoreV1ConfigMapList
listCoreV1NamespacedConfigMap namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/configmaps"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1ConfigMapListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind Endpoints
-}
listCoreV1NamespacedEndpoints : String -> Http.Request IoK8sApiCoreV1EndpointsList
listCoreV1NamespacedEndpoints namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/endpoints"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1EndpointsListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind Event
-}
listCoreV1NamespacedEvent : String -> Http.Request IoK8sApiCoreV1EventList
listCoreV1NamespacedEvent namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/events"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1EventListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind LimitRange
-}
listCoreV1NamespacedLimitRange : String -> Http.Request IoK8sApiCoreV1LimitRangeList
listCoreV1NamespacedLimitRange namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/limitranges"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1LimitRangeListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind PersistentVolumeClaim
-}
listCoreV1NamespacedPersistentVolumeClaim : String -> Http.Request IoK8sApiCoreV1PersistentVolumeClaimList
listCoreV1NamespacedPersistentVolumeClaim namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/persistentvolumeclaims"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1PersistentVolumeClaimListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind Pod
-}
listCoreV1NamespacedPod : String -> Http.Request IoK8sApiCoreV1PodList
listCoreV1NamespacedPod namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1PodListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind PodTemplate
-}
listCoreV1NamespacedPodTemplate : String -> Http.Request IoK8sApiCoreV1PodTemplateList
listCoreV1NamespacedPodTemplate namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/podtemplates"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1PodTemplateListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind ReplicationController
-}
listCoreV1NamespacedReplicationController : String -> Http.Request IoK8sApiCoreV1ReplicationControllerList
listCoreV1NamespacedReplicationController namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/replicationcontrollers"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1ReplicationControllerListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind ResourceQuota
-}
listCoreV1NamespacedResourceQuota : String -> Http.Request IoK8sApiCoreV1ResourceQuotaList
listCoreV1NamespacedResourceQuota namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/resourcequotas"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1ResourceQuotaListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind Secret
-}
listCoreV1NamespacedSecret : String -> Http.Request IoK8sApiCoreV1SecretList
listCoreV1NamespacedSecret namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/secrets"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1SecretListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind Service
-}
listCoreV1NamespacedService : String -> Http.Request IoK8sApiCoreV1ServiceList
listCoreV1NamespacedService namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1ServiceListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind ServiceAccount
-}
listCoreV1NamespacedServiceAccount : String -> Http.Request IoK8sApiCoreV1ServiceAccountList
listCoreV1NamespacedServiceAccount namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/serviceaccounts"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1ServiceAccountListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind Node
-}
listCoreV1Node : Http.Request IoK8sApiCoreV1NodeList
listCoreV1Node =
    { method = "GET"
    , url = basePath ++ "/api/v1/nodes"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1NodeListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind PersistentVolume
-}
listCoreV1PersistentVolume : Http.Request IoK8sApiCoreV1PersistentVolumeList
listCoreV1PersistentVolume =
    { method = "GET"
    , url = basePath ++ "/api/v1/persistentvolumes"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1PersistentVolumeListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind PersistentVolumeClaim
-}
listCoreV1PersistentVolumeClaimForAllNamespaces : Http.Request IoK8sApiCoreV1PersistentVolumeClaimList
listCoreV1PersistentVolumeClaimForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/persistentvolumeclaims"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1PersistentVolumeClaimListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind Pod
-}
listCoreV1PodForAllNamespaces : Http.Request IoK8sApiCoreV1PodList
listCoreV1PodForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/pods"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1PodListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind PodTemplate
-}
listCoreV1PodTemplateForAllNamespaces : Http.Request IoK8sApiCoreV1PodTemplateList
listCoreV1PodTemplateForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/podtemplates"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1PodTemplateListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind ReplicationController
-}
listCoreV1ReplicationControllerForAllNamespaces : Http.Request IoK8sApiCoreV1ReplicationControllerList
listCoreV1ReplicationControllerForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/replicationcontrollers"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1ReplicationControllerListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind ResourceQuota
-}
listCoreV1ResourceQuotaForAllNamespaces : Http.Request IoK8sApiCoreV1ResourceQuotaList
listCoreV1ResourceQuotaForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/resourcequotas"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1ResourceQuotaListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind Secret
-}
listCoreV1SecretForAllNamespaces : Http.Request IoK8sApiCoreV1SecretList
listCoreV1SecretForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/secrets"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1SecretListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind ServiceAccount
-}
listCoreV1ServiceAccountForAllNamespaces : Http.Request IoK8sApiCoreV1ServiceAccountList
listCoreV1ServiceAccountForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/serviceaccounts"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1ServiceAccountListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   list or watch objects of kind Service
-}
listCoreV1ServiceForAllNamespaces : Http.Request IoK8sApiCoreV1ServiceList
listCoreV1ServiceForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/services"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1ServiceListDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update the specified Namespace
-}
patchCoreV1Namespace : String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1Namespace
patchCoreV1Namespace name model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1NamespaceDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update status of the specified Namespace
-}
patchCoreV1NamespaceStatus : String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1Namespace
patchCoreV1NamespaceStatus name model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ name ++ "/status"
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1NamespaceDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update the specified ConfigMap
-}
patchCoreV1NamespacedConfigMap : String -> String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1ConfigMap
patchCoreV1NamespacedConfigMap name namespace model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/configmaps/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1ConfigMapDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update the specified Endpoints
-}
patchCoreV1NamespacedEndpoints : String -> String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1Endpoints
patchCoreV1NamespacedEndpoints name namespace model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/endpoints/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1EndpointsDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update the specified Event
-}
patchCoreV1NamespacedEvent : String -> String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1Event
patchCoreV1NamespacedEvent name namespace model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/events/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1EventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update the specified LimitRange
-}
patchCoreV1NamespacedLimitRange : String -> String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1LimitRange
patchCoreV1NamespacedLimitRange name namespace model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/limitranges/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1LimitRangeDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update the specified PersistentVolumeClaim
-}
patchCoreV1NamespacedPersistentVolumeClaim : String -> String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1PersistentVolumeClaim
patchCoreV1NamespacedPersistentVolumeClaim name namespace model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/persistentvolumeclaims/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1PersistentVolumeClaimDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update status of the specified PersistentVolumeClaim
-}
patchCoreV1NamespacedPersistentVolumeClaimStatus : String -> String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1PersistentVolumeClaim
patchCoreV1NamespacedPersistentVolumeClaimStatus name namespace model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/persistentvolumeclaims/" ++ name ++ "/status"
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1PersistentVolumeClaimDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update the specified Pod
-}
patchCoreV1NamespacedPod : String -> String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1Pod
patchCoreV1NamespacedPod name namespace model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1PodDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update status of the specified Pod
-}
patchCoreV1NamespacedPodStatus : String -> String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1Pod
patchCoreV1NamespacedPodStatus name namespace model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/status"
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1PodDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update the specified PodTemplate
-}
patchCoreV1NamespacedPodTemplate : String -> String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1PodTemplate
patchCoreV1NamespacedPodTemplate name namespace model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/podtemplates/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1PodTemplateDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update the specified ReplicationController
-}
patchCoreV1NamespacedReplicationController : String -> String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1ReplicationController
patchCoreV1NamespacedReplicationController name namespace model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/replicationcontrollers/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1ReplicationControllerDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update scale of the specified ReplicationController
-}
patchCoreV1NamespacedReplicationControllerScale : String -> String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiAutoscalingV1Scale
patchCoreV1NamespacedReplicationControllerScale name namespace model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/replicationcontrollers/" ++ name ++ "/scale"
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiAutoscalingV1ScaleDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update status of the specified ReplicationController
-}
patchCoreV1NamespacedReplicationControllerStatus : String -> String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1ReplicationController
patchCoreV1NamespacedReplicationControllerStatus name namespace model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/replicationcontrollers/" ++ name ++ "/status"
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1ReplicationControllerDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update the specified ResourceQuota
-}
patchCoreV1NamespacedResourceQuota : String -> String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1ResourceQuota
patchCoreV1NamespacedResourceQuota name namespace model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/resourcequotas/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1ResourceQuotaDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update status of the specified ResourceQuota
-}
patchCoreV1NamespacedResourceQuotaStatus : String -> String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1ResourceQuota
patchCoreV1NamespacedResourceQuotaStatus name namespace model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/resourcequotas/" ++ name ++ "/status"
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1ResourceQuotaDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update the specified Secret
-}
patchCoreV1NamespacedSecret : String -> String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1Secret
patchCoreV1NamespacedSecret name namespace model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/secrets/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1SecretDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update the specified Service
-}
patchCoreV1NamespacedService : String -> String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1Service
patchCoreV1NamespacedService name namespace model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1ServiceDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update the specified ServiceAccount
-}
patchCoreV1NamespacedServiceAccount : String -> String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1ServiceAccount
patchCoreV1NamespacedServiceAccount name namespace model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/serviceaccounts/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1ServiceAccountDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update status of the specified Service
-}
patchCoreV1NamespacedServiceStatus : String -> String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1Service
patchCoreV1NamespacedServiceStatus name namespace model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services/" ++ name ++ "/status"
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1ServiceDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update the specified Node
-}
patchCoreV1Node : String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1Node
patchCoreV1Node name model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/nodes/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1NodeDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update status of the specified Node
-}
patchCoreV1NodeStatus : String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1Node
patchCoreV1NodeStatus name model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/nodes/" ++ name ++ "/status"
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1NodeDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update the specified PersistentVolume
-}
patchCoreV1PersistentVolume : String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1PersistentVolume
patchCoreV1PersistentVolume name model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/persistentvolumes/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1PersistentVolumeDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   partially update status of the specified PersistentVolume
-}
patchCoreV1PersistentVolumeStatus : String -> IoK8sApimachineryPkgApisMetaV1Patch -> Http.Request IoK8sApiCoreV1PersistentVolume
patchCoreV1PersistentVolumeStatus name model =
    { method = "PATCH"
    , url = basePath ++ "/api/v1/persistentvolumes/" ++ name ++ "/status"
    , headers = []
    , body = Http.jsonBody <| ioK8sApimachineryPkgApisMetaV1PatchEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1PersistentVolumeDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read the specified ComponentStatus
-}
readCoreV1ComponentStatus : String -> Http.Request IoK8sApiCoreV1ComponentStatus
readCoreV1ComponentStatus name =
    { method = "GET"
    , url = basePath ++ "/api/v1/componentstatuses/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1ComponentStatusDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read the specified Namespace
-}
readCoreV1Namespace : String -> Http.Request IoK8sApiCoreV1Namespace
readCoreV1Namespace name =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1NamespaceDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read status of the specified Namespace
-}
readCoreV1NamespaceStatus : String -> Http.Request IoK8sApiCoreV1Namespace
readCoreV1NamespaceStatus name =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ name ++ "/status"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1NamespaceDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read the specified ConfigMap
-}
readCoreV1NamespacedConfigMap : String -> String -> Http.Request IoK8sApiCoreV1ConfigMap
readCoreV1NamespacedConfigMap name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/configmaps/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1ConfigMapDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read the specified Endpoints
-}
readCoreV1NamespacedEndpoints : String -> String -> Http.Request IoK8sApiCoreV1Endpoints
readCoreV1NamespacedEndpoints name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/endpoints/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1EndpointsDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read the specified Event
-}
readCoreV1NamespacedEvent : String -> String -> Http.Request IoK8sApiCoreV1Event
readCoreV1NamespacedEvent name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/events/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1EventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read the specified LimitRange
-}
readCoreV1NamespacedLimitRange : String -> String -> Http.Request IoK8sApiCoreV1LimitRange
readCoreV1NamespacedLimitRange name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/limitranges/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1LimitRangeDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read the specified PersistentVolumeClaim
-}
readCoreV1NamespacedPersistentVolumeClaim : String -> String -> Http.Request IoK8sApiCoreV1PersistentVolumeClaim
readCoreV1NamespacedPersistentVolumeClaim name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/persistentvolumeclaims/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1PersistentVolumeClaimDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read status of the specified PersistentVolumeClaim
-}
readCoreV1NamespacedPersistentVolumeClaimStatus : String -> String -> Http.Request IoK8sApiCoreV1PersistentVolumeClaim
readCoreV1NamespacedPersistentVolumeClaimStatus name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/persistentvolumeclaims/" ++ name ++ "/status"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1PersistentVolumeClaimDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read the specified Pod
-}
readCoreV1NamespacedPod : String -> String -> Http.Request IoK8sApiCoreV1Pod
readCoreV1NamespacedPod name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1PodDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read log of the specified Pod
-}
readCoreV1NamespacedPodLog : String -> String -> Http.Request String
readCoreV1NamespacedPodLog name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/log"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read status of the specified Pod
-}
readCoreV1NamespacedPodStatus : String -> String -> Http.Request IoK8sApiCoreV1Pod
readCoreV1NamespacedPodStatus name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/status"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1PodDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read the specified PodTemplate
-}
readCoreV1NamespacedPodTemplate : String -> String -> Http.Request IoK8sApiCoreV1PodTemplate
readCoreV1NamespacedPodTemplate name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/podtemplates/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1PodTemplateDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read the specified ReplicationController
-}
readCoreV1NamespacedReplicationController : String -> String -> Http.Request IoK8sApiCoreV1ReplicationController
readCoreV1NamespacedReplicationController name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/replicationcontrollers/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1ReplicationControllerDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read scale of the specified ReplicationController
-}
readCoreV1NamespacedReplicationControllerScale : String -> String -> Http.Request IoK8sApiAutoscalingV1Scale
readCoreV1NamespacedReplicationControllerScale name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/replicationcontrollers/" ++ name ++ "/scale"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiAutoscalingV1ScaleDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read status of the specified ReplicationController
-}
readCoreV1NamespacedReplicationControllerStatus : String -> String -> Http.Request IoK8sApiCoreV1ReplicationController
readCoreV1NamespacedReplicationControllerStatus name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/replicationcontrollers/" ++ name ++ "/status"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1ReplicationControllerDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read the specified ResourceQuota
-}
readCoreV1NamespacedResourceQuota : String -> String -> Http.Request IoK8sApiCoreV1ResourceQuota
readCoreV1NamespacedResourceQuota name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/resourcequotas/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1ResourceQuotaDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read status of the specified ResourceQuota
-}
readCoreV1NamespacedResourceQuotaStatus : String -> String -> Http.Request IoK8sApiCoreV1ResourceQuota
readCoreV1NamespacedResourceQuotaStatus name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/resourcequotas/" ++ name ++ "/status"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1ResourceQuotaDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read the specified Secret
-}
readCoreV1NamespacedSecret : String -> String -> Http.Request IoK8sApiCoreV1Secret
readCoreV1NamespacedSecret name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/secrets/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1SecretDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read the specified Service
-}
readCoreV1NamespacedService : String -> String -> Http.Request IoK8sApiCoreV1Service
readCoreV1NamespacedService name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1ServiceDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read the specified ServiceAccount
-}
readCoreV1NamespacedServiceAccount : String -> String -> Http.Request IoK8sApiCoreV1ServiceAccount
readCoreV1NamespacedServiceAccount name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/serviceaccounts/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1ServiceAccountDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read status of the specified Service
-}
readCoreV1NamespacedServiceStatus : String -> String -> Http.Request IoK8sApiCoreV1Service
readCoreV1NamespacedServiceStatus name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services/" ++ name ++ "/status"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1ServiceDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read the specified Node
-}
readCoreV1Node : String -> Http.Request IoK8sApiCoreV1Node
readCoreV1Node name =
    { method = "GET"
    , url = basePath ++ "/api/v1/nodes/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1NodeDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read status of the specified Node
-}
readCoreV1NodeStatus : String -> Http.Request IoK8sApiCoreV1Node
readCoreV1NodeStatus name =
    { method = "GET"
    , url = basePath ++ "/api/v1/nodes/" ++ name ++ "/status"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1NodeDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read the specified PersistentVolume
-}
readCoreV1PersistentVolume : String -> Http.Request IoK8sApiCoreV1PersistentVolume
readCoreV1PersistentVolume name =
    { method = "GET"
    , url = basePath ++ "/api/v1/persistentvolumes/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1PersistentVolumeDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   read status of the specified PersistentVolume
-}
readCoreV1PersistentVolumeStatus : String -> Http.Request IoK8sApiCoreV1PersistentVolume
readCoreV1PersistentVolumeStatus name =
    { method = "GET"
    , url = basePath ++ "/api/v1/persistentvolumes/" ++ name ++ "/status"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApiCoreV1PersistentVolumeDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace the specified Namespace
-}
replaceCoreV1Namespace : String -> IoK8sApiCoreV1Namespace -> Http.Request IoK8sApiCoreV1Namespace
replaceCoreV1Namespace name model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1NamespaceEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1NamespaceDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace finalize of the specified Namespace
-}
replaceCoreV1NamespaceFinalize : String -> IoK8sApiCoreV1Namespace -> Http.Request IoK8sApiCoreV1Namespace
replaceCoreV1NamespaceFinalize name model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ name ++ "/finalize"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1NamespaceEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1NamespaceDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace status of the specified Namespace
-}
replaceCoreV1NamespaceStatus : String -> IoK8sApiCoreV1Namespace -> Http.Request IoK8sApiCoreV1Namespace
replaceCoreV1NamespaceStatus name model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ name ++ "/status"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1NamespaceEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1NamespaceDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace the specified ConfigMap
-}
replaceCoreV1NamespacedConfigMap : String -> String -> IoK8sApiCoreV1ConfigMap -> Http.Request IoK8sApiCoreV1ConfigMap
replaceCoreV1NamespacedConfigMap name namespace model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/configmaps/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1ConfigMapEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1ConfigMapDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace the specified Endpoints
-}
replaceCoreV1NamespacedEndpoints : String -> String -> IoK8sApiCoreV1Endpoints -> Http.Request IoK8sApiCoreV1Endpoints
replaceCoreV1NamespacedEndpoints name namespace model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/endpoints/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1EndpointsEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1EndpointsDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace the specified Event
-}
replaceCoreV1NamespacedEvent : String -> String -> IoK8sApiCoreV1Event -> Http.Request IoK8sApiCoreV1Event
replaceCoreV1NamespacedEvent name namespace model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/events/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1EventEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1EventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace the specified LimitRange
-}
replaceCoreV1NamespacedLimitRange : String -> String -> IoK8sApiCoreV1LimitRange -> Http.Request IoK8sApiCoreV1LimitRange
replaceCoreV1NamespacedLimitRange name namespace model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/limitranges/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1LimitRangeEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1LimitRangeDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace the specified PersistentVolumeClaim
-}
replaceCoreV1NamespacedPersistentVolumeClaim : String -> String -> IoK8sApiCoreV1PersistentVolumeClaim -> Http.Request IoK8sApiCoreV1PersistentVolumeClaim
replaceCoreV1NamespacedPersistentVolumeClaim name namespace model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/persistentvolumeclaims/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1PersistentVolumeClaimEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1PersistentVolumeClaimDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace status of the specified PersistentVolumeClaim
-}
replaceCoreV1NamespacedPersistentVolumeClaimStatus : String -> String -> IoK8sApiCoreV1PersistentVolumeClaim -> Http.Request IoK8sApiCoreV1PersistentVolumeClaim
replaceCoreV1NamespacedPersistentVolumeClaimStatus name namespace model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/persistentvolumeclaims/" ++ name ++ "/status"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1PersistentVolumeClaimEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1PersistentVolumeClaimDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace the specified Pod
-}
replaceCoreV1NamespacedPod : String -> String -> IoK8sApiCoreV1Pod -> Http.Request IoK8sApiCoreV1Pod
replaceCoreV1NamespacedPod name namespace model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1PodEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1PodDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace status of the specified Pod
-}
replaceCoreV1NamespacedPodStatus : String -> String -> IoK8sApiCoreV1Pod -> Http.Request IoK8sApiCoreV1Pod
replaceCoreV1NamespacedPodStatus name namespace model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/pods/" ++ name ++ "/status"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1PodEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1PodDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace the specified PodTemplate
-}
replaceCoreV1NamespacedPodTemplate : String -> String -> IoK8sApiCoreV1PodTemplate -> Http.Request IoK8sApiCoreV1PodTemplate
replaceCoreV1NamespacedPodTemplate name namespace model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/podtemplates/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1PodTemplateEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1PodTemplateDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace the specified ReplicationController
-}
replaceCoreV1NamespacedReplicationController : String -> String -> IoK8sApiCoreV1ReplicationController -> Http.Request IoK8sApiCoreV1ReplicationController
replaceCoreV1NamespacedReplicationController name namespace model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/replicationcontrollers/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1ReplicationControllerEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1ReplicationControllerDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace scale of the specified ReplicationController
-}
replaceCoreV1NamespacedReplicationControllerScale : String -> String -> IoK8sApiAutoscalingV1Scale -> Http.Request IoK8sApiAutoscalingV1Scale
replaceCoreV1NamespacedReplicationControllerScale name namespace model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/replicationcontrollers/" ++ name ++ "/scale"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiAutoscalingV1ScaleEncoder model
    , expect = Http.expectJson ioK8sApiAutoscalingV1ScaleDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace status of the specified ReplicationController
-}
replaceCoreV1NamespacedReplicationControllerStatus : String -> String -> IoK8sApiCoreV1ReplicationController -> Http.Request IoK8sApiCoreV1ReplicationController
replaceCoreV1NamespacedReplicationControllerStatus name namespace model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/replicationcontrollers/" ++ name ++ "/status"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1ReplicationControllerEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1ReplicationControllerDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace the specified ResourceQuota
-}
replaceCoreV1NamespacedResourceQuota : String -> String -> IoK8sApiCoreV1ResourceQuota -> Http.Request IoK8sApiCoreV1ResourceQuota
replaceCoreV1NamespacedResourceQuota name namespace model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/resourcequotas/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1ResourceQuotaEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1ResourceQuotaDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace status of the specified ResourceQuota
-}
replaceCoreV1NamespacedResourceQuotaStatus : String -> String -> IoK8sApiCoreV1ResourceQuota -> Http.Request IoK8sApiCoreV1ResourceQuota
replaceCoreV1NamespacedResourceQuotaStatus name namespace model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/resourcequotas/" ++ name ++ "/status"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1ResourceQuotaEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1ResourceQuotaDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace the specified Secret
-}
replaceCoreV1NamespacedSecret : String -> String -> IoK8sApiCoreV1Secret -> Http.Request IoK8sApiCoreV1Secret
replaceCoreV1NamespacedSecret name namespace model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/secrets/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1SecretEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1SecretDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace the specified Service
-}
replaceCoreV1NamespacedService : String -> String -> IoK8sApiCoreV1Service -> Http.Request IoK8sApiCoreV1Service
replaceCoreV1NamespacedService name namespace model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1ServiceEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1ServiceDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace the specified ServiceAccount
-}
replaceCoreV1NamespacedServiceAccount : String -> String -> IoK8sApiCoreV1ServiceAccount -> Http.Request IoK8sApiCoreV1ServiceAccount
replaceCoreV1NamespacedServiceAccount name namespace model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/serviceaccounts/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1ServiceAccountEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1ServiceAccountDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace status of the specified Service
-}
replaceCoreV1NamespacedServiceStatus : String -> String -> IoK8sApiCoreV1Service -> Http.Request IoK8sApiCoreV1Service
replaceCoreV1NamespacedServiceStatus name namespace model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/namespaces/" ++ namespace ++ "/services/" ++ name ++ "/status"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1ServiceEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1ServiceDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace the specified Node
-}
replaceCoreV1Node : String -> IoK8sApiCoreV1Node -> Http.Request IoK8sApiCoreV1Node
replaceCoreV1Node name model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/nodes/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1NodeEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1NodeDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace status of the specified Node
-}
replaceCoreV1NodeStatus : String -> IoK8sApiCoreV1Node -> Http.Request IoK8sApiCoreV1Node
replaceCoreV1NodeStatus name model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/nodes/" ++ name ++ "/status"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1NodeEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1NodeDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace the specified PersistentVolume
-}
replaceCoreV1PersistentVolume : String -> IoK8sApiCoreV1PersistentVolume -> Http.Request IoK8sApiCoreV1PersistentVolume
replaceCoreV1PersistentVolume name model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/persistentvolumes/" ++ name
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1PersistentVolumeEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1PersistentVolumeDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   replace status of the specified PersistentVolume
-}
replaceCoreV1PersistentVolumeStatus : String -> IoK8sApiCoreV1PersistentVolume -> Http.Request IoK8sApiCoreV1PersistentVolume
replaceCoreV1PersistentVolumeStatus name model =
    { method = "PUT"
    , url = basePath ++ "/api/v1/persistentvolumes/" ++ name ++ "/status"
    , headers = []
    , body = Http.jsonBody <| ioK8sApiCoreV1PersistentVolumeEncoder model
    , expect = Http.expectJson ioK8sApiCoreV1PersistentVolumeDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of ConfigMap. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1ConfigMapListForAllNamespaces : Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1ConfigMapListForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/configmaps"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of Endpoints. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1EndpointsListForAllNamespaces : Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1EndpointsListForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/endpoints"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of Event. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1EventListForAllNamespaces : Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1EventListForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/events"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of LimitRange. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1LimitRangeListForAllNamespaces : Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1LimitRangeListForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/limitranges"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch changes to an object of kind Namespace. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
-}
watchCoreV1Namespace : String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1Namespace name =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of Namespace. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1NamespaceList : Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespaceList =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch changes to an object of kind ConfigMap. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
-}
watchCoreV1NamespacedConfigMap : String -> String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedConfigMap name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/configmaps/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of ConfigMap. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1NamespacedConfigMapList : String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedConfigMapList namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/configmaps"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch changes to an object of kind Endpoints. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
-}
watchCoreV1NamespacedEndpoints : String -> String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedEndpoints name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/endpoints/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of Endpoints. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1NamespacedEndpointsList : String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedEndpointsList namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/endpoints"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch changes to an object of kind Event. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
-}
watchCoreV1NamespacedEvent : String -> String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedEvent name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/events/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of Event. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1NamespacedEventList : String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedEventList namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/events"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch changes to an object of kind LimitRange. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
-}
watchCoreV1NamespacedLimitRange : String -> String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedLimitRange name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/limitranges/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of LimitRange. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1NamespacedLimitRangeList : String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedLimitRangeList namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/limitranges"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch changes to an object of kind PersistentVolumeClaim. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
-}
watchCoreV1NamespacedPersistentVolumeClaim : String -> String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedPersistentVolumeClaim name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/persistentvolumeclaims/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of PersistentVolumeClaim. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1NamespacedPersistentVolumeClaimList : String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedPersistentVolumeClaimList namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/persistentvolumeclaims"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch changes to an object of kind Pod. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
-}
watchCoreV1NamespacedPod : String -> String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedPod name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/pods/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of Pod. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1NamespacedPodList : String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedPodList namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/pods"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch changes to an object of kind PodTemplate. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
-}
watchCoreV1NamespacedPodTemplate : String -> String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedPodTemplate name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/podtemplates/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of PodTemplate. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1NamespacedPodTemplateList : String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedPodTemplateList namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/podtemplates"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch changes to an object of kind ReplicationController. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
-}
watchCoreV1NamespacedReplicationController : String -> String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedReplicationController name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/replicationcontrollers/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of ReplicationController. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1NamespacedReplicationControllerList : String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedReplicationControllerList namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/replicationcontrollers"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch changes to an object of kind ResourceQuota. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
-}
watchCoreV1NamespacedResourceQuota : String -> String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedResourceQuota name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/resourcequotas/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of ResourceQuota. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1NamespacedResourceQuotaList : String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedResourceQuotaList namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/resourcequotas"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch changes to an object of kind Secret. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
-}
watchCoreV1NamespacedSecret : String -> String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedSecret name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/secrets/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of Secret. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1NamespacedSecretList : String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedSecretList namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/secrets"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch changes to an object of kind Service. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
-}
watchCoreV1NamespacedService : String -> String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedService name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/services/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch changes to an object of kind ServiceAccount. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
-}
watchCoreV1NamespacedServiceAccount : String -> String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedServiceAccount name namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/serviceaccounts/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of ServiceAccount. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1NamespacedServiceAccountList : String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedServiceAccountList namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/serviceaccounts"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of Service. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1NamespacedServiceList : String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NamespacedServiceList namespace =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/namespaces/" ++ namespace ++ "/services"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch changes to an object of kind Node. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
-}
watchCoreV1Node : String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1Node name =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/nodes/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of Node. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1NodeList : Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1NodeList =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/nodes"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch changes to an object of kind PersistentVolume. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
-}
watchCoreV1PersistentVolume : String -> Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1PersistentVolume name =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/persistentvolumes/" ++ name
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of PersistentVolumeClaim. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1PersistentVolumeClaimListForAllNamespaces : Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1PersistentVolumeClaimListForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/persistentvolumeclaims"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of PersistentVolume. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1PersistentVolumeList : Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1PersistentVolumeList =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/persistentvolumes"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of Pod. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1PodListForAllNamespaces : Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1PodListForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/pods"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of PodTemplate. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1PodTemplateListForAllNamespaces : Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1PodTemplateListForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/podtemplates"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of ReplicationController. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1ReplicationControllerListForAllNamespaces : Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1ReplicationControllerListForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/replicationcontrollers"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of ResourceQuota. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1ResourceQuotaListForAllNamespaces : Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1ResourceQuotaListForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/resourcequotas"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of Secret. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1SecretListForAllNamespaces : Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1SecretListForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/secrets"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of ServiceAccount. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1ServiceAccountListForAllNamespaces : Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1ServiceAccountListForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/serviceaccounts"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-
   watch individual changes to a list of Service. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
-}
watchCoreV1ServiceListForAllNamespaces : Http.Request IoK8sApimachineryPkgApisMetaV1WatchEvent
watchCoreV1ServiceListForAllNamespaces =
    { method = "GET"
    , url = basePath ++ "/api/v1/watch/services"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson ioK8sApimachineryPkgApisMetaV1WatchEventDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


